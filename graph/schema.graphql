
type User {
    id: ID!
    username: String!
    email: String!
}

type Activity {
    id: ID!
    createdAt: String!
    startTime: String!
    endTime: String!
    comment: String
    sportType: String!
    user: User!
}

input ActivityFilter {
    startTime: String
    endTime: String
    comment: String
    sportType: String
}

type Query {
    activity(id: ID!): Activity!
    activities(filter: ActivityFilter, limit: Int = 10, offset: Int = 0): [Activity!]!
    user(id: ID!): User!
    users: [User!]!
}

input NewActivity {
    startTime: String!
    endTime:String!
    comment: String
    sportType: String!
}

input UpdateActivity {
    id: ID!
    startTime: String
    endTime:String
    comment: String
    sportType: String
}

type Mutation {
    addActivity(input: NewActivity!): Activity!
    updateActivity(input: UpdateActivity!): Activity!
    deleteActivity(id: ID!): Boolean!
}